#############################################################################
# Makefile for building: atom-heart-engine
# Generated by qmake (3.0) (Qt 5.5.1)
# Project:  atom-heart-engine.pro
# Template: app
# Command: /usr/lib/qt/bin/qmake -o Makefile atom-heart-engine.pro
#############################################################################

MAKEFILE      = Makefile

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = 
CFLAGS        = -pipe -g -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -pipe -std=c++0x -g -Wall -W -fPIC $(DEFINES)
INCPATH       = -I. -I/usr/lib/qt/mkspecs/linux-g++
QMAKE         = /usr/lib/qt/bin/qmake
DEL_FILE      = rm -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
COPY          = cp -f
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
INSTALL_FILE  = install -m 644 -p
INSTALL_PROGRAM = install -m 755 -p
INSTALL_DIR   = cp -f -R
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
TAR           = tar -cf
COMPRESS      = gzip -9f
DISTNAME      = atom-heart-engine1.0.0
DISTDIR = /home/marcecoll/Projects/Games/AtomHeartEngine/.tmp/atom-heart-engine1.0.0
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS) -lsfml-graphics -lsfml-window -lsfml-system 
AR            = ar cqs
RANLIB        = 
SED           = sed
STRIP         = strip

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = src/Base/Game.cpp \
		src/Base/EntityManager.cpp \
		src/Base/Scene.cpp \
		src/Base/SystemManager.cpp \
		src/Base/Systems/System.cpp \
		src/Base/Systems/BaseAudioSystem.cpp \
		src/Base/Systems/BaseDataSystem.cpp \
		src/Base/Systems/BaseInputSystem.cpp \
		src/Base/Systems/BaseRenderSystem.cpp \
		src/Base/Systems/BaseStateSystem.cpp \
		src/Base/Systems/BaseSceneSystem.cpp 
OBJECTS       = Game.o \
		EntityManager.o \
		Scene.o \
		SystemManager.o \
		System.o \
		BaseAudioSystem.o \
		BaseDataSystem.o \
		BaseInputSystem.o \
		BaseRenderSystem.o \
		BaseStateSystem.o \
		BaseSceneSystem.o
DIST          = /usr/lib/qt/mkspecs/features/spec_pre.prf \
		/usr/lib/qt/mkspecs/common/unix.conf \
		/usr/lib/qt/mkspecs/common/linux.conf \
		/usr/lib/qt/mkspecs/common/sanitize.conf \
		/usr/lib/qt/mkspecs/common/gcc-base.conf \
		/usr/lib/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/lib/qt/mkspecs/common/g++-base.conf \
		/usr/lib/qt/mkspecs/common/g++-unix.conf \
		/usr/lib/qt/mkspecs/qconfig.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_bootstrap_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_concurrent.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_concurrent_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_core.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_core_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_dbus.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_dbus_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_eglfs_device_lib_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_gui.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_gui_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_network.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_network_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_opengl.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_opengl_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_openglextensions.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_openglextensions_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_platformsupport_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_printsupport.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_printsupport_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_sql.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_sql_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_testlib.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_testlib_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_widgets.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_widgets_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_x11extras.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_x11extras_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_xcb_qpa_lib_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_xml.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_xml_private.pri \
		/usr/lib/qt/mkspecs/features/qt_functions.prf \
		/usr/lib/qt/mkspecs/features/qt_config.prf \
		/usr/lib/qt/mkspecs/linux-g++/qmake.conf \
		/usr/lib/qt/mkspecs/features/spec_post.prf \
		/usr/lib/qt/mkspecs/features/exclusive_builds.prf \
		/usr/lib/qt/mkspecs/features/default_pre.prf \
		/usr/lib/qt/mkspecs/features/resolve_config.prf \
		/usr/lib/qt/mkspecs/features/default_post.prf \
		/usr/lib/qt/mkspecs/features/warn_on.prf \
		/usr/lib/qt/mkspecs/features/testcase_targets.prf \
		/usr/lib/qt/mkspecs/features/exceptions.prf \
		/usr/lib/qt/mkspecs/features/yacc.prf \
		/usr/lib/qt/mkspecs/features/lex.prf \
		atom-heart-engine.pro src/Base/Game.hpp \
		src/Base/Entity.hpp \
		src/Base/EntityManager.hpp \
		src/Base/Scene.hpp \
		src/Base/SystemManager.hpp \
		src/Base/Systems/System.hpp \
		src/Base/Systems/BaseAudioSystem.hpp \
		src/Base/Systems/BaseDataSystem.hpp \
		src/Base/Systems/BaseInputSystem.hpp \
		src/Base/Systems/BaseRenderSystem.hpp \
		src/Base/Systems/BaseStateSystem.hpp \
		src/Base/Systems/BaseSceneSystem.hpp src/Base/Game.cpp \
		src/Base/EntityManager.cpp \
		src/Base/Scene.cpp \
		src/Base/SystemManager.cpp \
		src/Base/Systems/System.cpp \
		src/Base/Systems/BaseAudioSystem.cpp \
		src/Base/Systems/BaseDataSystem.cpp \
		src/Base/Systems/BaseInputSystem.cpp \
		src/Base/Systems/BaseRenderSystem.cpp \
		src/Base/Systems/BaseStateSystem.cpp \
		src/Base/Systems/BaseSceneSystem.cpp
QMAKE_TARGET  = atom-heart-engine
DESTDIR       = #avoid trailing-slash linebreak
TARGET        = atom-heart-engine


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: atom-heart-engine.pro /usr/lib/qt/mkspecs/linux-g++/qmake.conf /usr/lib/qt/mkspecs/features/spec_pre.prf \
		/usr/lib/qt/mkspecs/common/unix.conf \
		/usr/lib/qt/mkspecs/common/linux.conf \
		/usr/lib/qt/mkspecs/common/sanitize.conf \
		/usr/lib/qt/mkspecs/common/gcc-base.conf \
		/usr/lib/qt/mkspecs/common/gcc-base-unix.conf \
		/usr/lib/qt/mkspecs/common/g++-base.conf \
		/usr/lib/qt/mkspecs/common/g++-unix.conf \
		/usr/lib/qt/mkspecs/qconfig.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_bootstrap_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_concurrent.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_concurrent_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_core.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_core_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_dbus.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_dbus_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_eglfs_device_lib_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_gui.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_gui_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_network.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_network_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_opengl.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_opengl_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_openglextensions.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_openglextensions_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_platformsupport_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_printsupport.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_printsupport_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_sql.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_sql_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_testlib.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_testlib_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_widgets.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_widgets_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_x11extras.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_x11extras_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_xcb_qpa_lib_private.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_xml.pri \
		/usr/lib/qt/mkspecs/modules/qt_lib_xml_private.pri \
		/usr/lib/qt/mkspecs/features/qt_functions.prf \
		/usr/lib/qt/mkspecs/features/qt_config.prf \
		/usr/lib/qt/mkspecs/linux-g++/qmake.conf \
		/usr/lib/qt/mkspecs/features/spec_post.prf \
		/usr/lib/qt/mkspecs/features/exclusive_builds.prf \
		/usr/lib/qt/mkspecs/features/default_pre.prf \
		/usr/lib/qt/mkspecs/features/resolve_config.prf \
		/usr/lib/qt/mkspecs/features/default_post.prf \
		/usr/lib/qt/mkspecs/features/warn_on.prf \
		/usr/lib/qt/mkspecs/features/testcase_targets.prf \
		/usr/lib/qt/mkspecs/features/exceptions.prf \
		/usr/lib/qt/mkspecs/features/yacc.prf \
		/usr/lib/qt/mkspecs/features/lex.prf \
		atom-heart-engine.pro
	$(QMAKE) -o Makefile atom-heart-engine.pro
/usr/lib/qt/mkspecs/features/spec_pre.prf:
/usr/lib/qt/mkspecs/common/unix.conf:
/usr/lib/qt/mkspecs/common/linux.conf:
/usr/lib/qt/mkspecs/common/sanitize.conf:
/usr/lib/qt/mkspecs/common/gcc-base.conf:
/usr/lib/qt/mkspecs/common/gcc-base-unix.conf:
/usr/lib/qt/mkspecs/common/g++-base.conf:
/usr/lib/qt/mkspecs/common/g++-unix.conf:
/usr/lib/qt/mkspecs/qconfig.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_bootstrap_private.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_concurrent.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_concurrent_private.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_core.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_core_private.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_dbus.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_dbus_private.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_eglfs_device_lib_private.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_gui.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_gui_private.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_network.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_network_private.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_opengl.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_opengl_private.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_openglextensions.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_openglextensions_private.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_platformsupport_private.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_printsupport.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_printsupport_private.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_sql.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_sql_private.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_testlib.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_testlib_private.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_widgets.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_widgets_private.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_x11extras.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_x11extras_private.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_xcb_qpa_lib_private.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_xml.pri:
/usr/lib/qt/mkspecs/modules/qt_lib_xml_private.pri:
/usr/lib/qt/mkspecs/features/qt_functions.prf:
/usr/lib/qt/mkspecs/features/qt_config.prf:
/usr/lib/qt/mkspecs/linux-g++/qmake.conf:
/usr/lib/qt/mkspecs/features/spec_post.prf:
/usr/lib/qt/mkspecs/features/exclusive_builds.prf:
/usr/lib/qt/mkspecs/features/default_pre.prf:
/usr/lib/qt/mkspecs/features/resolve_config.prf:
/usr/lib/qt/mkspecs/features/default_post.prf:
/usr/lib/qt/mkspecs/features/warn_on.prf:
/usr/lib/qt/mkspecs/features/testcase_targets.prf:
/usr/lib/qt/mkspecs/features/exceptions.prf:
/usr/lib/qt/mkspecs/features/yacc.prf:
/usr/lib/qt/mkspecs/features/lex.prf:
atom-heart-engine.pro:
qmake: FORCE
	@$(QMAKE) -o Makefile atom-heart-engine.pro

qmake_all: FORCE


all: Makefile $(TARGET)

dist: distdir FORCE
	(cd `dirname $(DISTDIR)` && $(TAR) $(DISTNAME).tar $(DISTNAME) && $(COMPRESS) $(DISTNAME).tar) && $(MOVE) `dirname $(DISTDIR)`/$(DISTNAME).tar.gz . && $(DEL_FILE) -r $(DISTDIR)

distdir: FORCE
	@test -d $(DISTDIR) || mkdir -p $(DISTDIR)
	$(COPY_FILE) --parents $(DIST) $(DISTDIR)/


clean: compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


distclean: clean 
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


####### Sub-libraries

check: first

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

Game.o: src/Base/Game.cpp src/Base/Game.hpp \
		src/Base/SystemManager.hpp \
		src/Base/TypeId.hpp \
		src/Base/Systems/BaseAudioSystem.hpp \
		src/Base/Systems/System.hpp \
		src/Base/Systems/BaseSceneSystem.hpp \
		src/Base/Scene.hpp \
		src/Base/EntityManager.hpp \
		src/Base/Entity.hpp \
		src/Base/Systems/BaseRenderSystem.hpp \
		src/Base/Systems/BaseInputSystem.hpp \
		src/Base/Systems/BaseDataSystem.hpp \
		src/Base/Systems/BaseStateSystem.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Game.o src/Base/Game.cpp

EntityManager.o: src/Base/EntityManager.cpp src/Base/EntityManager.hpp \
		src/Base/Entity.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o EntityManager.o src/Base/EntityManager.cpp

Scene.o: src/Base/Scene.cpp src/Base/Scene.hpp \
		src/Base/EntityManager.hpp \
		src/Base/Entity.hpp \
		src/UI/UIManager.hpp \
		src/Base/Game.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Scene.o src/Base/Scene.cpp

SystemManager.o: src/Base/SystemManager.cpp src/Base/SystemManager.hpp \
		src/Base/TypeId.hpp \
		src/Base/Systems/BaseAudioSystem.hpp \
		src/Base/Systems/System.hpp \
		src/Base/Systems/BaseSceneSystem.hpp \
		src/Base/Scene.hpp \
		src/Base/EntityManager.hpp \
		src/Base/Entity.hpp \
		src/Base/Systems/BaseRenderSystem.hpp \
		src/Base/Systems/BaseInputSystem.hpp \
		src/Base/Systems/BaseDataSystem.hpp \
		src/Base/Systems/BaseStateSystem.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o SystemManager.o src/Base/SystemManager.cpp

System.o: src/Base/Systems/System.cpp src/Base/Systems/System.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o System.o src/Base/Systems/System.cpp

BaseAudioSystem.o: src/Base/Systems/BaseAudioSystem.cpp src/Base/Systems/BaseAudioSystem.hpp \
		src/Base/Systems/System.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BaseAudioSystem.o src/Base/Systems/BaseAudioSystem.cpp

BaseDataSystem.o: src/Base/Systems/BaseDataSystem.cpp src/Base/Systems/BaseDataSystem.hpp \
		src/Base/Systems/System.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BaseDataSystem.o src/Base/Systems/BaseDataSystem.cpp

BaseInputSystem.o: src/Base/Systems/BaseInputSystem.cpp src/Base/Systems/BaseInputSystem.hpp \
		src/Base/Systems/System.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BaseInputSystem.o src/Base/Systems/BaseInputSystem.cpp

BaseRenderSystem.o: src/Base/Systems/BaseRenderSystem.cpp src/Base/Systems/BaseRenderSystem.hpp \
		src/Base/Systems/System.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BaseRenderSystem.o src/Base/Systems/BaseRenderSystem.cpp

BaseStateSystem.o: src/Base/Systems/BaseStateSystem.cpp src/Base/Systems/BaseStateSystem.hpp \
		src/Base/Systems/System.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BaseStateSystem.o src/Base/Systems/BaseStateSystem.cpp

BaseSceneSystem.o: src/Base/Systems/BaseSceneSystem.cpp src/Base/Systems/BaseSceneSystem.hpp \
		src/Base/Systems/System.hpp \
		src/Base/Scene.hpp \
		src/Base/EntityManager.hpp \
		src/Base/Entity.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o BaseSceneSystem.o src/Base/Systems/BaseSceneSystem.cpp

####### Install

install:  FORCE

uninstall:  FORCE

FORCE:

